// Transistion mixin for multi-browser support
// Pass arguments as comma separated values, just like normal ...
@mixin transition($arguments...) {
    -webkit-transition: $arguments;
    -moz-transition: $arguments;
    -ms-transition: $arguments;
    -o-transition: $arguments;
    transition: $arguments;
}

// Transistion all properties of element mixin for multi-browser support ...
// Pass arguments as comma separated values, just like normal ...
@mixin transitionAll($timing...) {
    -webkit-transition: $timing;
    -moz-transition: $timing;
    -ms-transition: $timing;
    -o-transition: $timing;
    transition: $timing;
}

// Transform mixin for multi-browser support
// Pass arguments as comma separated values, just like normal ...
@mixin transform($arguments...) {
    -webkit-transform: $arguments;
    -moz-transform: $arguments;
    -ms-transform: $arguments;
    -o-transform: $arguments;
    transform: $arguments;
}

// Transform Origin mixin for multi-browser support
@mixin transformOrigin($position) {
    -webkit-transform-origin: $position;
    -moz-transform-origin: $position;
    -o-transform-origin: $position;
    transform-origin: $position;
}

@mixin boxShadow($properties) {
    -webkit-box-shadow: $properties;
    -moz-box-shadow: $properties;
    box-shadow: $properties;
}

@mixin borderRadius($radius) {
    -webkit-border-radius: $radius;
    -moz-border-radius: $radius;
    -ms-border-radius: $radius;
    -o-border-radius: $radius;
    border-radius: $radius;
}

$zIndex: (
    headerView: 100,
    contentView: 100,
    contentModal: 200,
    headerModal: 200,
);

@function zIndex($element) {
    @return map-get($map: $zIndex, $key: $element );
}

@mixin zIndex($element) {
    z-index: zIndex($element);
}

